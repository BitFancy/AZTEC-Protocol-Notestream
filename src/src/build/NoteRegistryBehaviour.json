{
  "contractName": "NoteRegistryBehaviour",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "JOIN_SPLIT_PROOF",
      "outputs": [
        {
          "name": "",
          "type": "uint24"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dataLocation",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialised",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ZERO_VALUE_NOTE_HASH",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PUBLIC_RANGE_PROOF",
      "outputs": [
        {
          "name": "",
          "type": "uint24"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PRIVATE_RANGE_PROOF",
      "outputs": [
        {
          "name": "",
          "type": "uint24"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DIVIDEND_PROOF",
      "outputs": [
        {
          "name": "",
          "type": "uint24"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isActiveBehaviour",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MINT_PROOF",
      "outputs": [
        {
          "name": "",
          "type": "uint24"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BURN_PROOF",
      "outputs": [
        {
          "name": "",
          "type": "uint24"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        },
        {
          "name": "_scalingFactor",
          "type": "uint256"
        },
        {
          "name": "_canAdjustSupply",
          "type": "bool"
        },
        {
          "name": "_canConvert",
          "type": "bool"
        }
      ],
      "name": "initialise",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRegistry",
      "outputs": [
        {
          "name": "scalingFactor",
          "type": "uint256"
        },
        {
          "name": "confidentialTotalMinted",
          "type": "bytes32"
        },
        {
          "name": "confidentialTotalBurned",
          "type": "bytes32"
        },
        {
          "name": "canConvert",
          "type": "bool"
        },
        {
          "name": "canAdjustSupply",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_proofOutputs",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_proofOutputs",
          "type": "bytes"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_proof",
          "type": "uint24"
        },
        {
          "name": "_proofOutput",
          "type": "bytes"
        }
      ],
      "name": "updateNoteRegistry",
      "outputs": [
        {
          "name": "publicOwner",
          "type": "address"
        },
        {
          "name": "transferValue",
          "type": "uint256"
        },
        {
          "name": "publicValue",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_noteHash",
          "type": "bytes32"
        }
      ],
      "name": "getNote",
      "outputs": [
        {
          "name": "status",
          "type": "uint8"
        },
        {
          "name": "createdOn",
          "type": "uint40"
        },
        {
          "name": "destroyedOn",
          "type": "uint40"
        },
        {
          "name": "noteOwner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity >=0.5.0 <0.6.0;\n\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\nimport \"../../../interfaces/IAZTEC.sol\";\n\n/**\n * @title NoteRegistryBehaviour interface which defines the base API\n        which must be implemented for every behaviour contract.\n * @author AZTEC\n * @dev This interface will mostly be used by ACE, in order to have an API to\n        interact with note registries through proxies.\n * The implementation of all write methods should have an onlyOwner modifier.\n *\n * Copyright Spilsbury Holdings Ltd 2019. All rights reserved.\n **/\ncontract NoteRegistryBehaviour is Ownable, IAZTEC {\n    using SafeMath for uint256;\n\n    bool public isActiveBehaviour;\n    bool public initialised;\n    address public dataLocation;\n\n    constructor () Ownable() public {\n        isActiveBehaviour = true;\n    }\n\n    /**\n        * @dev Initialises the data of a noteRegistry. Should be called exactly once.\n        *\n        * @param _newOwner - the address which the initialise call will transfer ownership to\n        * @param _scalingFactor - defines the number of tokens that an AZTEC note value of 1 maps to.\n        * @param _canAdjustSupply - whether the noteRegistry can make use of minting and burning\n        * @param _canConvert - whether the noteRegistry can transfer value from private to public\n            representation and vice versa\n    */\n    function initialise(\n        address _newOwner,\n        uint256 _scalingFactor,\n        bool _canAdjustSupply,\n        bool _canConvert\n    ) public;\n\n    /**\n        * @dev Fetches data of the registry\n        *\n        * @return scalingFactor - defines the number of tokens that an AZTEC note value of 1 maps to.\n        * @return confidentialTotalMinted - the hash of the AZTEC note representing the total amount\n            which has been minted.\n        * @return confidentialTotalBurned - the hash of the AZTEC note representing the total amount\n            which has been burned.\n        * @return canConvert - the boolean whih defines if the noteRegistry can convert between\n            public and private.\n        * @return canConvert - the boolean whih defines if the noteRegistry can make use of\n            minting and burning methods.\n    */\n    function getRegistry() public view returns (\n        uint256 scalingFactor,\n        bytes32 confidentialTotalMinted,\n        bytes32 confidentialTotalBurned,\n        bool canConvert,\n        bool canAdjustSupply\n    );\n\n    /**\n        * @dev Enacts the state modifications needed given a successfully validated burn proof\n        *\n        * @param _proofOutputs - the output of the burn validator\n    */\n    function burn(bytes calldata _proofOutputs) external;\n\n    /**\n        * @dev Enacts the state modifications needed given a successfully validated mint proof\n        *\n        * @param _proofOutputs - the output of the mint validator\n    */\n    function mint(bytes calldata _proofOutputs) external;\n\n    /**\n        * @dev Enacts the state modifications needed given the output of a successfully validated proof.\n        * The _proofId param is used by the behaviour contract to (if needed) restrict the versions of proofs\n        * which the note registry supports, useful in case the proofOutputs schema changes for example.\n        *\n        * @param _proof - the id of the proof\n        * @param _proofOutput - the output of the proof validator\n        *\n        * @return publicOwner - the non-ACE party involved in this transaction. Either current or desired\n        *   owner of public tokens\n        * @return transferValue - the total public token value to transfer. Seperate value to abstract\n        *   away scaling factors in first version of AZTEC\n        * @return publicValue - the kPublic value to be used in zero-knowledge proofs\n    */\n    function updateNoteRegistry(\n        uint24 _proof,\n        bytes memory _proofOutput\n    ) public returns (\n        address publicOwner,\n        uint256 transferValue,\n        int256 publicValue\n    );\n\n    /**\n        * @dev Sets confidentialTotalMinted to a new value. The value must be the hash of a note;\n        *\n        * @param _newTotalNoteHash - the hash of the note representing the total minted value for an asset.\n    */\n    function setConfidentialTotalMinted(bytes32 _newTotalNoteHash) internal returns (bytes32);\n\n    /**\n        * @dev Sets confidentialTotalBurned to a new value. The value must be the hash of a note;\n        *\n        * @param _newTotalNoteHash - the hash of the note representing the total burned value for an asset.\n    */\n    function setConfidentialTotalBurned(bytes32 _newTotalNoteHash) internal returns (bytes32);\n\n    /**\n        * @dev Gets a defined note from the note registry, and returns the deconstructed object.\n            This is to avoid the interface to be\n        * _too_ opninated on types, even though it does require any subsequent note type to have\n            (or be able to mock) the return fields.\n        *\n        * @param _noteHash - the hash of the note being fetched\n        *\n        * @return status - whether a note has been spent or not\n        * @return createdOn - timestamp of the creation time of the note\n        * @return destroyedOn - timestamp of the time the note was destroyed (if it has been destroyed, 0 otherwise)\n        * @return noteOwner - address of the stored owner of the note\n    */\n    function getNote(bytes32 _noteHash) public view returns (\n        uint8 status,\n        uint40 createdOn,\n        uint40 destroyedOn,\n        address noteOwner\n    );\n\n    /**\n        * @dev Internal function to update the noteRegistry given a bytes array.\n        *\n        * @param _inputNotes - a bytes array containing notes\n    */\n    function updateInputNotes(bytes memory _inputNotes) internal;\n\n    /**\n        * @dev Internal function to update the noteRegistry given a bytes array.\n        *\n        * @param _outputNotes - a bytes array containing notes\n    */\n    function updateOutputNotes(bytes memory _outputNotes) internal;\n\n    /**\n        * @dev Internal function to create a new note object.\n        *\n        * @param _noteHash - the noteHash\n        * @param _noteOwner - the address of the owner of the note\n    */\n    function createNote(bytes32 _noteHash, address _noteOwner) internal;\n\n    /**\n        * @dev Internal function to delete a note object.\n        *\n        * @param _noteHash - the noteHash\n        * @param _noteOwner - the address of the owner of the note\n    */\n    function deleteNote(bytes32 _noteHash, address _noteOwner) internal;\n}\n",
  "sourcePath": "@aztec/protocol/contracts/ACE/noteRegistry/interfaces/NoteRegistryBehaviour.sol",
  "ast": {
    "absolutePath": "@aztec/protocol/contracts/ACE/noteRegistry/interfaces/NoteRegistryBehaviour.sol",
    "exportedSymbols": {
      "NoteRegistryBehaviour": [
        2716
      ]
    },
    "id": 2717,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2591,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:10"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 2592,
        "nodeType": "ImportDirective",
        "scope": 2717,
        "sourceUnit": 5349,
        "src": "33:59:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2593,
        "nodeType": "ImportDirective",
        "scope": 2717,
        "sourceUnit": 5460,
        "src": "93:63:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@aztec/protocol/contracts/interfaces/IAZTEC.sol",
        "file": "../../../interfaces/IAZTEC.sol",
        "id": 2594,
        "nodeType": "ImportDirective",
        "scope": 2717,
        "sourceUnit": 4738,
        "src": "158:40:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2595,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5459,
              "src": "670:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5459",
                "typeString": "contract Ownable"
              }
            },
            "id": 2596,
            "nodeType": "InheritanceSpecifier",
            "src": "670:7:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2597,
              "name": "IAZTEC",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4737,
              "src": "679:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAZTEC_$4737",
                "typeString": "contract IAZTEC"
              }
            },
            "id": 2598,
            "nodeType": "InheritanceSpecifier",
            "src": "679:6:10"
          }
        ],
        "contractDependencies": [
          4737,
          5459
        ],
        "contractKind": "contract",
        "documentation": "@title NoteRegistryBehaviour interface which defines the base API\nwhich must be implemented for every behaviour contract.\n@author AZTEC\n@dev This interface will mostly be used by ACE, in order to have an API to\ninteract with note registries through proxies.\nThe implementation of all write methods should have an onlyOwner modifier.\n * Copyright Spilsbury Holdings Ltd 2019. All rights reserved.*",
        "fullyImplemented": false,
        "id": 2716,
        "linearizedBaseContracts": [
          2716,
          4737,
          5459
        ],
        "name": "NoteRegistryBehaviour",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2601,
            "libraryName": {
              "contractScope": null,
              "id": 2599,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5348,
              "src": "698:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5348",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "692:27:10",
            "typeName": {
              "id": 2600,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "711:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2603,
            "name": "isActiveBehaviour",
            "nodeType": "VariableDeclaration",
            "scope": 2716,
            "src": "725:29:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2602,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "725:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2605,
            "name": "initialised",
            "nodeType": "VariableDeclaration",
            "scope": 2716,
            "src": "760:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2604,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "760:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2607,
            "name": "dataLocation",
            "nodeType": "VariableDeclaration",
            "scope": 2716,
            "src": "789:27:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2606,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "789:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2616,
              "nodeType": "Block",
              "src": "855:41:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2612,
                      "name": "isActiveBehaviour",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2603,
                      "src": "865:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "885:4:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "865:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2615,
                  "nodeType": "ExpressionStatement",
                  "src": "865:24:10"
                }
              ]
            },
            "documentation": null,
            "id": 2617,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 2610,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2609,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5459,
                  "src": "838:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$5459_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "838:9:10"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "835:2:10"
            },
            "returnParameters": {
              "id": 2611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "855:0:10"
            },
            "scope": 2716,
            "src": "823:73:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Initialises the data of a noteRegistry. Should be called exactly once.\n        * @param _newOwner - the address which the initialise call will transfer ownership to\n@param _scalingFactor - defines the number of tokens that an AZTEC note value of 1 maps to.\n@param _canAdjustSupply - whether the noteRegistry can make use of minting and burning\n@param _canConvert - whether the noteRegistry can transfer value from private to public\nrepresentation and vice versa",
            "id": 2628,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "initialise",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2619,
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2628,
                  "src": "1475:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2621,
                  "name": "_scalingFactor",
                  "nodeType": "VariableDeclaration",
                  "scope": 2628,
                  "src": "1502:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2620,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1502:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2623,
                  "name": "_canAdjustSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 2628,
                  "src": "1534:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2622,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1534:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2625,
                  "name": "_canConvert",
                  "nodeType": "VariableDeclaration",
                  "scope": 2628,
                  "src": "1565:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2624,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1565:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1465:122:10"
            },
            "returnParameters": {
              "id": 2627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1594:0:10"
            },
            "scope": 2716,
            "src": "1446:149:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Fetches data of the registry\n        * @return scalingFactor - defines the number of tokens that an AZTEC note value of 1 maps to.\n@return confidentialTotalMinted - the hash of the AZTEC note representing the total amount\nwhich has been minted.\n@return confidentialTotalBurned - the hash of the AZTEC note representing the total amount\nwhich has been burned.\n@return canConvert - the boolean whih defines if the noteRegistry can convert between\npublic and private.\n@return canConvert - the boolean whih defines if the noteRegistry can make use of\nminting and burning methods.",
            "id": 2641,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2325:2:10"
            },
            "returnParameters": {
              "id": 2640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2631,
                  "name": "scalingFactor",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "2358:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2358:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2633,
                  "name": "confidentialTotalMinted",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "2389:31:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2632,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2389:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2635,
                  "name": "confidentialTotalBurned",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "2430:31:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2634,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2430:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2637,
                  "name": "canConvert",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "2471:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2636,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2471:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2639,
                  "name": "canAdjustSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "2496:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2638,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2496:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2348:174:10"
            },
            "scope": 2716,
            "src": "2305:218:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Enacts the state modifications needed given a successfully validated burn proof\n        * @param _proofOutputs - the output of the burn validator",
            "id": 2646,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2643,
                  "name": "_proofOutputs",
                  "nodeType": "VariableDeclaration",
                  "scope": 2646,
                  "src": "2729:28:10",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2642,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2729:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2728:30:10"
            },
            "returnParameters": {
              "id": 2645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2767:0:10"
            },
            "scope": 2716,
            "src": "2715:53:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Enacts the state modifications needed given a successfully validated mint proof\n        * @param _proofOutputs - the output of the mint validator",
            "id": 2651,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2648,
                  "name": "_proofOutputs",
                  "nodeType": "VariableDeclaration",
                  "scope": 2651,
                  "src": "2974:28:10",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2647,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2974:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2973:30:10"
            },
            "returnParameters": {
              "id": 2650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3012:0:10"
            },
            "scope": 2716,
            "src": "2960:53:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Enacts the state modifications needed given the output of a successfully validated proof.\nThe _proofId param is used by the behaviour contract to (if needed) restrict the versions of proofs\nwhich the note registry supports, useful in case the proofOutputs schema changes for example.\n        * @param _proof - the id of the proof\n@param _proofOutput - the output of the proof validator\n        * @return publicOwner - the non-ACE party involved in this transaction. Either current or desired\n  owner of public tokens\n@return transferValue - the total public token value to transfer. Seperate value to abstract\n  away scaling factors in first version of AZTEC\n@return publicValue - the kPublic value to be used in zero-knowledge proofs",
            "id": 2664,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateNoteRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2653,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 2664,
                  "src": "3911:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 2652,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3911:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2655,
                  "name": "_proofOutput",
                  "nodeType": "VariableDeclaration",
                  "scope": 2664,
                  "src": "3934:25:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2654,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3934:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3901:64:10"
            },
            "returnParameters": {
              "id": 2663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2658,
                  "name": "publicOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2664,
                  "src": "3991:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3991:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2660,
                  "name": "transferValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 2664,
                  "src": "4020:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4020:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2662,
                  "name": "publicValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 2664,
                  "src": "4051:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2661,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4051:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3981:94:10"
            },
            "scope": 2716,
            "src": "3874:202:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Sets confidentialTotalMinted to a new value. The value must be the hash of a note;\n        * @param _newTotalNoteHash - the hash of the note representing the total minted value for an asset.",
            "id": 2671,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setConfidentialTotalMinted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2666,
                  "name": "_newTotalNoteHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2671,
                  "src": "4349:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2665,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4349:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4348:27:10"
            },
            "returnParameters": {
              "id": 2670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2669,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2671,
                  "src": "4394:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2668,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4394:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4393:9:10"
            },
            "scope": 2716,
            "src": "4313:90:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev Sets confidentialTotalBurned to a new value. The value must be the hash of a note;\n        * @param _newTotalNoteHash - the hash of the note representing the total burned value for an asset.",
            "id": 2678,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setConfidentialTotalBurned",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2673,
                  "name": "_newTotalNoteHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2678,
                  "src": "4676:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2672,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4676:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4675:27:10"
            },
            "returnParameters": {
              "id": 2677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2676,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2678,
                  "src": "4721:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2675,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4721:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4720:9:10"
            },
            "scope": 2716,
            "src": "4640:90:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev Gets a defined note from the note registry, and returns the deconstructed object.\nThis is to avoid the interface to be\n_too_ opninated on types, even though it does require any subsequent note type to have\n(or be able to mock) the return fields.\n        * @param _noteHash - the hash of the note being fetched\n        * @return status - whether a note has been spent or not\n@return createdOn - timestamp of the creation time of the note\n@return destroyedOn - timestamp of the time the note was destroyed (if it has been destroyed, 0 otherwise)\n@return noteOwner - address of the stored owner of the note",
            "id": 2691,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getNote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2680,
                  "name": "_noteHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2691,
                  "src": "5471:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2679,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5471:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5470:19:10"
            },
            "returnParameters": {
              "id": 2690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2683,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 2691,
                  "src": "5520:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2682,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5520:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2685,
                  "name": "createdOn",
                  "nodeType": "VariableDeclaration",
                  "scope": 2691,
                  "src": "5542:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 2684,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "5542:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2687,
                  "name": "destroyedOn",
                  "nodeType": "VariableDeclaration",
                  "scope": 2691,
                  "src": "5568:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 2686,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "5568:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2689,
                  "name": "noteOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2691,
                  "src": "5596:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5596:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5510:109:10"
            },
            "scope": 2716,
            "src": "5454:166:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Internal function to update the noteRegistry given a bytes array.\n        * @param _inputNotes - a bytes array containing notes",
            "id": 2696,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateInputNotes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2693,
                  "name": "_inputNotes",
                  "nodeType": "VariableDeclaration",
                  "scope": 2696,
                  "src": "5820:24:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2692,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5820:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5819:26:10"
            },
            "returnParameters": {
              "id": 2695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5854:0:10"
            },
            "scope": 2716,
            "src": "5794:61:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev Internal function to update the noteRegistry given a bytes array.\n        * @param _outputNotes - a bytes array containing notes",
            "id": 2701,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateOutputNotes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2698,
                  "name": "_outputNotes",
                  "nodeType": "VariableDeclaration",
                  "scope": 2701,
                  "src": "6057:25:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2697,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6057:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6056:27:10"
            },
            "returnParameters": {
              "id": 2700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6092:0:10"
            },
            "scope": 2716,
            "src": "6030:63:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev Internal function to create a new note object.\n        * @param _noteHash - the noteHash\n@param _noteOwner - the address of the owner of the note",
            "id": 2708,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createNote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2703,
                  "name": "_noteHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2708,
                  "src": "6315:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2702,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6315:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2705,
                  "name": "_noteOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2708,
                  "src": "6334:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2704,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6334:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6314:39:10"
            },
            "returnParameters": {
              "id": 2707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6362:0:10"
            },
            "scope": 2716,
            "src": "6295:68:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev Internal function to delete a note object.\n        * @param _noteHash - the noteHash\n@param _noteOwner - the address of the owner of the note",
            "id": 2715,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteNote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2710,
                  "name": "_noteHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2715,
                  "src": "6581:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2709,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6581:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2712,
                  "name": "_noteOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2715,
                  "src": "6600:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2711,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6600:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6580:39:10"
            },
            "returnParameters": {
              "id": 2714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6628:0:10"
            },
            "scope": 2716,
            "src": "6561:68:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2717,
        "src": "636:5995:10"
      }
    ],
    "src": "0:6632:10"
  },
  "legacyAST": {
    "absolutePath": "@aztec/protocol/contracts/ACE/noteRegistry/interfaces/NoteRegistryBehaviour.sol",
    "exportedSymbols": {
      "NoteRegistryBehaviour": [
        2716
      ]
    },
    "id": 2717,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2591,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:10"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 2592,
        "nodeType": "ImportDirective",
        "scope": 2717,
        "sourceUnit": 5349,
        "src": "33:59:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2593,
        "nodeType": "ImportDirective",
        "scope": 2717,
        "sourceUnit": 5460,
        "src": "93:63:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@aztec/protocol/contracts/interfaces/IAZTEC.sol",
        "file": "../../../interfaces/IAZTEC.sol",
        "id": 2594,
        "nodeType": "ImportDirective",
        "scope": 2717,
        "sourceUnit": 4738,
        "src": "158:40:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2595,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5459,
              "src": "670:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5459",
                "typeString": "contract Ownable"
              }
            },
            "id": 2596,
            "nodeType": "InheritanceSpecifier",
            "src": "670:7:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2597,
              "name": "IAZTEC",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4737,
              "src": "679:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAZTEC_$4737",
                "typeString": "contract IAZTEC"
              }
            },
            "id": 2598,
            "nodeType": "InheritanceSpecifier",
            "src": "679:6:10"
          }
        ],
        "contractDependencies": [
          4737,
          5459
        ],
        "contractKind": "contract",
        "documentation": "@title NoteRegistryBehaviour interface which defines the base API\nwhich must be implemented for every behaviour contract.\n@author AZTEC\n@dev This interface will mostly be used by ACE, in order to have an API to\ninteract with note registries through proxies.\nThe implementation of all write methods should have an onlyOwner modifier.\n * Copyright Spilsbury Holdings Ltd 2019. All rights reserved.*",
        "fullyImplemented": false,
        "id": 2716,
        "linearizedBaseContracts": [
          2716,
          4737,
          5459
        ],
        "name": "NoteRegistryBehaviour",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2601,
            "libraryName": {
              "contractScope": null,
              "id": 2599,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5348,
              "src": "698:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5348",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "692:27:10",
            "typeName": {
              "id": 2600,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "711:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2603,
            "name": "isActiveBehaviour",
            "nodeType": "VariableDeclaration",
            "scope": 2716,
            "src": "725:29:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2602,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "725:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2605,
            "name": "initialised",
            "nodeType": "VariableDeclaration",
            "scope": 2716,
            "src": "760:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2604,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "760:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2607,
            "name": "dataLocation",
            "nodeType": "VariableDeclaration",
            "scope": 2716,
            "src": "789:27:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2606,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "789:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2616,
              "nodeType": "Block",
              "src": "855:41:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2612,
                      "name": "isActiveBehaviour",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2603,
                      "src": "865:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "885:4:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "865:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2615,
                  "nodeType": "ExpressionStatement",
                  "src": "865:24:10"
                }
              ]
            },
            "documentation": null,
            "id": 2617,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 2610,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2609,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5459,
                  "src": "838:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$5459_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "838:9:10"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "835:2:10"
            },
            "returnParameters": {
              "id": 2611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "855:0:10"
            },
            "scope": 2716,
            "src": "823:73:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Initialises the data of a noteRegistry. Should be called exactly once.\n        * @param _newOwner - the address which the initialise call will transfer ownership to\n@param _scalingFactor - defines the number of tokens that an AZTEC note value of 1 maps to.\n@param _canAdjustSupply - whether the noteRegistry can make use of minting and burning\n@param _canConvert - whether the noteRegistry can transfer value from private to public\nrepresentation and vice versa",
            "id": 2628,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "initialise",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2619,
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2628,
                  "src": "1475:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2621,
                  "name": "_scalingFactor",
                  "nodeType": "VariableDeclaration",
                  "scope": 2628,
                  "src": "1502:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2620,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1502:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2623,
                  "name": "_canAdjustSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 2628,
                  "src": "1534:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2622,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1534:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2625,
                  "name": "_canConvert",
                  "nodeType": "VariableDeclaration",
                  "scope": 2628,
                  "src": "1565:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2624,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1565:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1465:122:10"
            },
            "returnParameters": {
              "id": 2627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1594:0:10"
            },
            "scope": 2716,
            "src": "1446:149:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Fetches data of the registry\n        * @return scalingFactor - defines the number of tokens that an AZTEC note value of 1 maps to.\n@return confidentialTotalMinted - the hash of the AZTEC note representing the total amount\nwhich has been minted.\n@return confidentialTotalBurned - the hash of the AZTEC note representing the total amount\nwhich has been burned.\n@return canConvert - the boolean whih defines if the noteRegistry can convert between\npublic and private.\n@return canConvert - the boolean whih defines if the noteRegistry can make use of\nminting and burning methods.",
            "id": 2641,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2325:2:10"
            },
            "returnParameters": {
              "id": 2640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2631,
                  "name": "scalingFactor",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "2358:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2358:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2633,
                  "name": "confidentialTotalMinted",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "2389:31:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2632,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2389:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2635,
                  "name": "confidentialTotalBurned",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "2430:31:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2634,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2430:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2637,
                  "name": "canConvert",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "2471:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2636,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2471:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2639,
                  "name": "canAdjustSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "2496:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2638,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2496:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2348:174:10"
            },
            "scope": 2716,
            "src": "2305:218:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Enacts the state modifications needed given a successfully validated burn proof\n        * @param _proofOutputs - the output of the burn validator",
            "id": 2646,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2643,
                  "name": "_proofOutputs",
                  "nodeType": "VariableDeclaration",
                  "scope": 2646,
                  "src": "2729:28:10",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2642,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2729:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2728:30:10"
            },
            "returnParameters": {
              "id": 2645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2767:0:10"
            },
            "scope": 2716,
            "src": "2715:53:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Enacts the state modifications needed given a successfully validated mint proof\n        * @param _proofOutputs - the output of the mint validator",
            "id": 2651,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2648,
                  "name": "_proofOutputs",
                  "nodeType": "VariableDeclaration",
                  "scope": 2651,
                  "src": "2974:28:10",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2647,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2974:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2973:30:10"
            },
            "returnParameters": {
              "id": 2650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3012:0:10"
            },
            "scope": 2716,
            "src": "2960:53:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Enacts the state modifications needed given the output of a successfully validated proof.\nThe _proofId param is used by the behaviour contract to (if needed) restrict the versions of proofs\nwhich the note registry supports, useful in case the proofOutputs schema changes for example.\n        * @param _proof - the id of the proof\n@param _proofOutput - the output of the proof validator\n        * @return publicOwner - the non-ACE party involved in this transaction. Either current or desired\n  owner of public tokens\n@return transferValue - the total public token value to transfer. Seperate value to abstract\n  away scaling factors in first version of AZTEC\n@return publicValue - the kPublic value to be used in zero-knowledge proofs",
            "id": 2664,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateNoteRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2653,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 2664,
                  "src": "3911:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 2652,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3911:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2655,
                  "name": "_proofOutput",
                  "nodeType": "VariableDeclaration",
                  "scope": 2664,
                  "src": "3934:25:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2654,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3934:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3901:64:10"
            },
            "returnParameters": {
              "id": 2663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2658,
                  "name": "publicOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2664,
                  "src": "3991:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3991:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2660,
                  "name": "transferValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 2664,
                  "src": "4020:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4020:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2662,
                  "name": "publicValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 2664,
                  "src": "4051:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2661,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4051:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3981:94:10"
            },
            "scope": 2716,
            "src": "3874:202:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Sets confidentialTotalMinted to a new value. The value must be the hash of a note;\n        * @param _newTotalNoteHash - the hash of the note representing the total minted value for an asset.",
            "id": 2671,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setConfidentialTotalMinted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2666,
                  "name": "_newTotalNoteHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2671,
                  "src": "4349:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2665,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4349:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4348:27:10"
            },
            "returnParameters": {
              "id": 2670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2669,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2671,
                  "src": "4394:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2668,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4394:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4393:9:10"
            },
            "scope": 2716,
            "src": "4313:90:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev Sets confidentialTotalBurned to a new value. The value must be the hash of a note;\n        * @param _newTotalNoteHash - the hash of the note representing the total burned value for an asset.",
            "id": 2678,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setConfidentialTotalBurned",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2673,
                  "name": "_newTotalNoteHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2678,
                  "src": "4676:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2672,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4676:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4675:27:10"
            },
            "returnParameters": {
              "id": 2677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2676,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2678,
                  "src": "4721:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2675,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4721:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4720:9:10"
            },
            "scope": 2716,
            "src": "4640:90:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev Gets a defined note from the note registry, and returns the deconstructed object.\nThis is to avoid the interface to be\n_too_ opninated on types, even though it does require any subsequent note type to have\n(or be able to mock) the return fields.\n        * @param _noteHash - the hash of the note being fetched\n        * @return status - whether a note has been spent or not\n@return createdOn - timestamp of the creation time of the note\n@return destroyedOn - timestamp of the time the note was destroyed (if it has been destroyed, 0 otherwise)\n@return noteOwner - address of the stored owner of the note",
            "id": 2691,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getNote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2680,
                  "name": "_noteHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2691,
                  "src": "5471:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2679,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5471:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5470:19:10"
            },
            "returnParameters": {
              "id": 2690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2683,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 2691,
                  "src": "5520:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2682,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5520:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2685,
                  "name": "createdOn",
                  "nodeType": "VariableDeclaration",
                  "scope": 2691,
                  "src": "5542:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 2684,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "5542:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2687,
                  "name": "destroyedOn",
                  "nodeType": "VariableDeclaration",
                  "scope": 2691,
                  "src": "5568:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 2686,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "5568:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2689,
                  "name": "noteOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2691,
                  "src": "5596:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5596:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5510:109:10"
            },
            "scope": 2716,
            "src": "5454:166:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Internal function to update the noteRegistry given a bytes array.\n        * @param _inputNotes - a bytes array containing notes",
            "id": 2696,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateInputNotes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2693,
                  "name": "_inputNotes",
                  "nodeType": "VariableDeclaration",
                  "scope": 2696,
                  "src": "5820:24:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2692,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5820:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5819:26:10"
            },
            "returnParameters": {
              "id": 2695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5854:0:10"
            },
            "scope": 2716,
            "src": "5794:61:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev Internal function to update the noteRegistry given a bytes array.\n        * @param _outputNotes - a bytes array containing notes",
            "id": 2701,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateOutputNotes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2698,
                  "name": "_outputNotes",
                  "nodeType": "VariableDeclaration",
                  "scope": 2701,
                  "src": "6057:25:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2697,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6057:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6056:27:10"
            },
            "returnParameters": {
              "id": 2700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6092:0:10"
            },
            "scope": 2716,
            "src": "6030:63:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev Internal function to create a new note object.\n        * @param _noteHash - the noteHash\n@param _noteOwner - the address of the owner of the note",
            "id": 2708,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createNote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2703,
                  "name": "_noteHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2708,
                  "src": "6315:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2702,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6315:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2705,
                  "name": "_noteOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2708,
                  "src": "6334:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2704,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6334:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6314:39:10"
            },
            "returnParameters": {
              "id": 2707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6362:0:10"
            },
            "scope": 2716,
            "src": "6295:68:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev Internal function to delete a note object.\n        * @param _noteHash - the noteHash\n@param _noteOwner - the address of the owner of the note",
            "id": 2715,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteNote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2710,
                  "name": "_noteHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2715,
                  "src": "6581:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2709,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6581:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2712,
                  "name": "_noteOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2715,
                  "src": "6600:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2711,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6600:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6580:39:10"
            },
            "returnParameters": {
              "id": 2714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6628:0:10"
            },
            "scope": 2716,
            "src": "6561:68:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2717,
        "src": "636:5995:10"
      }
    ],
    "src": "0:6632:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-09-06T17:17:03.137Z",
  "devdoc": {
    "author": "AZTEC",
    "details": "This interface will mostly be used by ACE, in order to have an API to interact with note registries through proxies. The implementation of all write methods should have an onlyOwner modifier. * Copyright Spilsbury Holdings Ltd 2019. All rights reserved.*",
    "methods": {
      "burn(bytes)": {
        "details": "Enacts the state modifications needed given a successfully validated burn proof",
        "params": {
          "_proofOutputs": "- the output of the burn validator"
        }
      },
      "getNote(bytes32)": {
        "details": "Gets a defined note from the note registry, and returns the deconstructed object. This is to avoid the interface to be _too_ opninated on types, even though it does require any subsequent note type to have (or be able to mock) the return fields.",
        "params": {
          "_noteHash": "- the hash of the note being fetched"
        },
        "return": "status - whether a note has been spent or notcreatedOn - timestamp of the creation time of the notedestroyedOn - timestamp of the time the note was destroyed (if it has been destroyed, 0 otherwise)noteOwner - address of the stored owner of the note"
      },
      "getRegistry()": {
        "details": "Fetches data of the registry",
        "return": "scalingFactor - defines the number of tokens that an AZTEC note value of 1 maps to.confidentialTotalMinted - the hash of the AZTEC note representing the total amount which has been minted.confidentialTotalBurned - the hash of the AZTEC note representing the total amount which has been burned.canConvert - the boolean whih defines if the noteRegistry can convert between public and private.canConvert - the boolean whih defines if the noteRegistry can make use of minting and burning methods."
      },
      "initialise(address,uint256,bool,bool)": {
        "details": "Initialises the data of a noteRegistry. Should be called exactly once.",
        "params": {
          "_canAdjustSupply": "- whether the noteRegistry can make use of minting and burning",
          "_canConvert": "- whether the noteRegistry can transfer value from private to public representation and vice versa",
          "_newOwner": "- the address which the initialise call will transfer ownership to",
          "_scalingFactor": "- defines the number of tokens that an AZTEC note value of 1 maps to."
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "mint(bytes)": {
        "details": "Enacts the state modifications needed given a successfully validated mint proof",
        "params": {
          "_proofOutputs": "- the output of the mint validator"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateNoteRegistry(uint24,bytes)": {
        "details": "Enacts the state modifications needed given the output of a successfully validated proof. The _proofId param is used by the behaviour contract to (if needed) restrict the versions of proofs which the note registry supports, useful in case the proofOutputs schema changes for example.",
        "params": {
          "_proof": "- the id of the proof",
          "_proofOutput": "- the output of the proof validator"
        },
        "return": "publicOwner - the non-ACE party involved in this transaction. Either current or desired  owner of public tokenstransferValue - the total public token value to transfer. Seperate value to abstract  away scaling factors in first version of AZTECpublicValue - the kPublic value to be used in zero-knowledge proofs"
      }
    },
    "title": "NoteRegistryBehaviour interface which defines the base API which must be implemented for every behaviour contract."
  },
  "userdoc": {
    "methods": {}
  }
}